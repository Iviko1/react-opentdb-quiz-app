{"version":3,"sources":["assets/background.jpg","GlobalStyles.js","Components/Container/Container.styles.js","API.js","Pages/Home/Home.styles.js","Pages/Home/index.js","Components/Spinner/Spinner.styles.js","Components/Spinner/index.js","Pages/Quiz/Quiz.styles.js","Pages/Quiz/index.js","Pages/Score/Score.style.js","Pages/Score/index.js","App.js","index.js"],"names":["GlobalStyle","createGlobalStyle","backgroundImage","Container","styled","div","Categories","category","value","Difficulties","HomeWrapper","HomeHeading","h1","HomeSelect","select","HomeStartButton","button","HomeSelectWrapper","ErrorMessage","Home","fetchQuestions","error","setError","useState","setCategory","difficulty","setDifficulty","navigate","useNavigate","style","display","required","onChange","e","target","defaultValue","disabled","hidden","map","index","charAt","toUpperCase","slice","onClick","rotate","keyframes","Loader","Spinner","QuizWrapper","QuizHeadingWrapper","QuizCard","QuestionCard","OptionsContainer","Option","ResetButton","Quiz","score","questions","setQuestions","setScore","options","setOptions","currentQuestion","setCurrentQuestion","userOption","setUserOption","handleNext","setTimeout","useEffect","length","correct_answer","incorrect_answers","sort","Math","random","question","option","handleCheck","className","ScoreWrapper","Score","color","App","a","URL","axios","get","data","results","basename","path","element","ROOT","document","getElementById","ReactDOM","render"],"mappings":"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","file":"static/js/main.107308a3.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/background.b21a67f9.jpg\";","import { createGlobalStyle } from \"styled-components\";\r\nimport backgroundImage from \"./assets/background.jpg\";\r\nconst GlobalStyle = createGlobalStyle`\r\n\r\n    *{\r\n        margin: 0;\r\n        padding: 0;\r\n        box-sizing:border-box;\r\n    }\r\n\r\n    body{\r\n        font-family: 'Poppins', sans-serif;\r\n        \r\n    }\r\n\r\n    .correct{\r\n        background-color: #23C552 !important;\r\n        color: #232323 !important;\r\n    }\r\n\r\n    .incorrect{\r\n        background-color: #F84F31 !important;\r\n        color: #232323 !important;\r\n    }\r\n\r\n    #root{\r\n        background: url(${backgroundImage});\r\n        background-blend-mode: lighten;\r\n        background-position: center;\r\n        background-repeat: no-repeat;\r\n        background-size: cover;\r\n        background-color: rgba(255,255,255,0.25);\r\n    }\r\n`;\r\n\r\nexport default GlobalStyle;\r\n","import styled from \"styled-components\";\r\n\r\nexport const Container = styled.div`\r\n  width: 80%;\r\n  margin: 0 auto;\r\n  padding: 0 0.5rem;\r\n`;\r\n","export const Categories = [\r\n  {\r\n    category: \"General Knowledge\",\r\n    value: 9,\r\n  },\r\n  { category: \"Books\", value: 10 },\r\n  { category: \"Films\", value: 11 },\r\n  { category: \"Music\", value: 12 },\r\n  { category: \"Musicals and Theaters\", value: 13 },\r\n  { category: \"Television\", value: 14 },\r\n  { category: \"Video Games\", value: 15 },\r\n  { category: \"Board Games\", value: 16 },\r\n  { category: \"Science and Nature\", value: 17 },\r\n  { category: \"Science Computers\", value: 18 },\r\n  { category: \"Mathematics\", value: 19 },\r\n  { category: \"Mythology\", value: 20 },\r\n  { category: \"Sports\", value: 21 },\r\n  { category: \"Geography\", value: 22 },\r\n  { category: \"History\", value: 23 },\r\n  { category: \"Politics\", value: 24 },\r\n  { category: \"Art\", value: 25 },\r\n  { category: \"Celebrities\", value: 26 },\r\n  { category: \"Animals\", value: 27 },\r\n  { category: \"Vehicles\", value: 28 },\r\n  { category: \"Comics\", value: 29 },\r\n  { category: \"Gadgets\", value: 30 },\r\n  { category: \"Japanese Anime\", value: 31 },\r\n  { category: \"Cartoon and Animations\", value: 32 },\r\n];\r\n\r\nexport const Difficulties = [\"easy\", \"medium\", \"hard\"];\r\n","import styled from \"styled-components\";\r\n\r\nexport const HomeWrapper = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  flex-direction: column;\r\n  width: 100%;\r\n  min-height: 100vh;\r\n`;\r\n\r\nexport const HomeHeading = styled.h1`\r\n  font-size: 3rem;\r\n  color: #232323;\r\n  margin: 1rem;\r\n  text-align: center;\r\n`;\r\n\r\nexport const HomeSelect = styled.select`\r\n  padding: 0.5rem 1rem;\r\n  color: #fff;\r\n  background-color: #232323;\r\n  border-radius: 0.25rem;\r\n  outline: none;\r\n  margin: 1rem;\r\n  width: 50%;\r\n  font-size: 1.25rem;\r\n  cursor: pointer;\r\n\r\n  @media screen and (max-width: 600px) {\r\n    width: 75%;\r\n  }\r\n  @media screen and (max-width: 400px) {\r\n    width: 100%;\r\n  }\r\n\r\n  &::-webkit-scrollbar {\r\n    width: 10px;\r\n  }\r\n\r\n  &::-webkit-scrollbar-track {\r\n    background: #232323;\r\n  }\r\n\r\n  &::-webkit-scrollbar-thumb {\r\n    background: #888;\r\n  }\r\n\r\n  &::-webkit-scrollbar-thumb:hover {\r\n    background: #555;\r\n  }\r\n`;\r\n\r\nexport const HomeStartButton = styled.button`\r\n  min-width: 100px;\r\n  min-height: 50px;\r\n  margin-top: 1rem;\r\n  font-size: 1rem;\r\n  font-weight: bold;\r\n  background-color: #232323;\r\n  color: #fff;\r\n  outline: none;\r\n  border: none;\r\n  border-radius: 0.25rem;\r\n  padding: 0.25rem 0.5rem;\r\n  transition: opacity 0.25s ease-in;\r\n\r\n  &:hover {\r\n    opacity: 0.95;\r\n    cursor: pointer;\r\n  }\r\n`;\r\n\r\nexport const HomeSelectWrapper = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  width: 100%;\r\n`;\r\n\r\nexport const ErrorMessage = styled.h1`\r\n  margin-top: 2rem;\r\n  font-size: 1rem;\r\n  color: #232323;\r\n  background-color: rgba(248, 79, 49, 0.8);\r\n  padding: 0.25rem 0.5rem;\r\n  border-radius: 5px;\r\n  text-align: center;\r\n`;\r\n","import React, { useState } from \"react\";\r\nimport { useNavigate } from \"react-router\";\r\nimport { Categories, Difficulties } from \"../../API\";\r\nimport {\r\n  HomeSelect,\r\n  HomeStartButton,\r\n  HomeWrapper,\r\n  HomeHeading,\r\n  HomeSelectWrapper,\r\n  ErrorMessage,\r\n} from \"./Home.styles\";\r\n\r\nconst Home = ({ fetchQuestions, error, setError }) => {\r\n  const [category, setCategory] = useState();\r\n  const [difficulty, setDifficulty] = useState();\r\n\r\n  const navigate = useNavigate();\r\n\r\n  const startQuiz = () => {\r\n    if (category && difficulty) {\r\n      fetchQuestions(category, difficulty);\r\n      navigate(\"/quiz\");\r\n      setDifficulty(\"\");\r\n      setCategory(\"\");\r\n      setError();\r\n    } else {\r\n      setError(\"Please Select Both Fields.\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <HomeWrapper>\r\n      {error && (\r\n        <ErrorMessage\r\n          style={error ? { display: \"block\" } : { display: \"none\" }}\r\n        >\r\n          {error}\r\n        </ErrorMessage>\r\n      )}\r\n      <HomeHeading>Quiz App</HomeHeading>\r\n      <HomeSelectWrapper>\r\n        <HomeSelect\r\n          required\r\n          onChange={(e) => {\r\n            setCategory(e.target.value);\r\n          }}\r\n        >\r\n          <option defaultValue=\"\" disabled={category} hidden={category}>\r\n            Select a Category\r\n          </option>\r\n          {Categories.map((category, index) => {\r\n            return (\r\n              <option key={index} value={category.value}>\r\n                {category.category}\r\n              </option>\r\n            );\r\n          })}\r\n        </HomeSelect>\r\n        <HomeSelect\r\n          required\r\n          onChange={(e) => {\r\n            setDifficulty(e.target.value);\r\n          }}\r\n        >\r\n          <option defaultValue=\"\" disabled={difficulty} hidden={difficulty}>\r\n            Select a Difficulty\r\n          </option>\r\n          {Difficulties.map((difficulty) => {\r\n            return (\r\n              <option key={difficulty} value={difficulty}>\r\n                {difficulty.charAt(0).toUpperCase() + difficulty.slice(1)}\r\n              </option>\r\n            );\r\n          })}\r\n        </HomeSelect>\r\n      </HomeSelectWrapper>\r\n      <HomeStartButton onClick={startQuiz}>Start Quiz</HomeStartButton>\r\n    </HomeWrapper>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","import styled, { keyframes } from \"styled-components\";\r\n\r\nconst rotate = keyframes`   \r\n    to{\r\n        transform: rotate(360deg);\r\n    }\r\n`;\r\n\r\nexport const Loader = styled.div`\r\n  width: 150px;\r\n  height: 150px;\r\n  border-radius: 50%;\r\n  border: 10px solid #fff;\r\n  border-color: #232323;\r\n  border-top-color: #fff;\r\n  position: absolute;\r\n\r\n  animation: ${rotate} 1s ease-in-out infinite;\r\n`;\r\n","import React from \"react\";\r\nimport { Loader } from \"./Spinner.styles\";\r\n\r\nconst Spinner = () => {\r\n  return <Loader />;\r\n};\r\n\r\nexport default Spinner;\r\n","import styled from \"styled-components\";\r\n\r\nexport const QuizWrapper = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  min-height: 100vh;\r\n  text-align: center;\r\n  flex-direction: column;\r\n`;\r\n\r\nexport const QuizHeadingWrapper = styled.div`\r\n  display: flex;\r\n  width: 100%;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  color: #232323;\r\n  font-size: 1.5rem;\r\n  padding: 1rem;\r\n\r\n  @media screen and (max-width: 500px) {\r\n    flex-direction: column-reverse;\r\n  }\r\n`;\r\n\r\nexport const QuizCard = styled.div`\r\n  display: flex;\r\n  min-width: 100%;\r\n  flex-direction: column;\r\n  gap: 1rem;\r\n  align-items: center;\r\n  justify-content: center;\r\n  padding: 1rem;\r\n  border-radius: 0.5rem;\r\n  border: 5px solid #232323;\r\n`;\r\n\r\nexport const QuestionCard = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  gap: 2rem;\r\n  width: 100%;\r\n  padding: 1rem;\r\n\r\n  h1 {\r\n    font-size: 2rem;\r\n  }\r\n`;\r\n\r\nexport const OptionsContainer = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  align-items: flex-start;\r\n  gap: 1rem;\r\n`;\r\n\r\nexport const Option = styled.button`\r\n  width: 100%;\r\n  padding: 1rem;\r\n  font-weight: bold;\r\n  font-size: 1.5rem;\r\n  color: #fff;\r\n  outline: none;\r\n  border-radius: 0.25rem;\r\n  border: none;\r\n  background-color: #232323;\r\n  transition: all 0.25s ease-in;\r\n\r\n  &:hover {\r\n    cursor: pointer;\r\n    opacity: 0.9;\r\n  }\r\n`;\r\n\r\nexport const ResetButton = styled.button`\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  border: 4px solid #232323;\r\n  border-radius: 0.25rem;\r\n  min-height: 40px;\r\n  min-width: 80px;\r\n  padding: 0.5rem 1rem;\r\n  color: #232323;\r\n  background-color: #fff;\r\n  font-weight: bold;\r\n  font-size: 1rem;\r\n  margin-top: 1rem;\r\n  transition: opacity 0.25s ease-in;\r\n\r\n  &:hover {\r\n    cursor: pointer;\r\n    opacity: 0.8;\r\n  }\r\n`;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { useNavigate } from \"react-router\";\r\nimport Spinner from \"../../Components/Spinner\";\r\nimport {\r\n  QuizWrapper,\r\n  QuizCard,\r\n  QuestionCard,\r\n  OptionsContainer,\r\n  Option,\r\n  QuizHeadingWrapper,\r\n  ResetButton,\r\n} from \"./Quiz.styles\";\r\n\r\nconst Quiz = ({\r\n  score,\r\n  questions,\r\n  setQuestions,\r\n  setScore,\r\n  error,\r\n  setError,\r\n}) => {\r\n  const [options, setOptions] = useState();\r\n  const [currentQuestion, setCurrentQuestion] = useState(0);\r\n  const [userOption, setUserOption] = useState(\"\");\r\n\r\n  const navigate = useNavigate();\r\n\r\n  const handleShuffle = (optionss) => {\r\n    return optionss.sort(() => Math.random() - 0.5);\r\n  };\r\n\r\n  const handleCheck = (option) => {\r\n    if (option === questions[currentQuestion].correct_answer) {\r\n      setScore(score + 1);\r\n      handleNext();\r\n    } else {\r\n      handleNext();\r\n    }\r\n  };\r\n\r\n  const handleNext = () => {\r\n    setTimeout(() => {\r\n      if (currentQuestion + 1 < 10) {\r\n        setCurrentQuestion(currentQuestion + 1);\r\n        setUserOption();\r\n      } else {\r\n        setCurrentQuestion(0);\r\n        setOptions();\r\n        setUserOption();\r\n        setQuestions();\r\n        navigate(\"/score\");\r\n      }\r\n    }, 1500);\r\n  };\r\n\r\n  const handleReset = () => {\r\n    setCurrentQuestion(0);\r\n    setUserOption();\r\n    setOptions();\r\n    setQuestions();\r\n    setScore(0);\r\n    navigate(\"/\");\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (questions) {\r\n      if (questions.length !== 0) {\r\n        setOptions(\r\n          handleShuffle([\r\n            questions[currentQuestion].correct_answer,\r\n            ...questions[currentQuestion].incorrect_answers,\r\n          ])\r\n        );\r\n      } else {\r\n        setQuestions();\r\n        setError(\"No Questions Found\");\r\n        navigate(\"/\");\r\n      }\r\n    }\r\n  }, [questions, currentQuestion, navigate, setQuestions, setError]);\r\n\r\n  return (\r\n    <QuizWrapper>\r\n      {!questions && <Spinner />}\r\n      {questions && questions.length !== 0 && (\r\n        <QuizCard>\r\n          <QuizHeadingWrapper>\r\n            <h1>Score: {score}</h1>\r\n            <h1>{currentQuestion + 1} / 10</h1>\r\n          </QuizHeadingWrapper>\r\n          <QuestionCard>\r\n            <h1>{questions[currentQuestion].question}</h1>\r\n            <OptionsContainer>\r\n              {options &&\r\n                options.map((option) => {\r\n                  return (\r\n                    <Option\r\n                      value={option}\r\n                      key={option}\r\n                      onClick={(e) => {\r\n                        setUserOption(option);\r\n                        handleCheck(option);\r\n                      }}\r\n                      className={\r\n                        (userOption &&\r\n                          option ===\r\n                            questions[currentQuestion].correct_answer &&\r\n                          \"correct\") ||\r\n                        (userOption && \"incorrect\")\r\n                      }\r\n                      disabled={userOption}\r\n                    >\r\n                      {option}\r\n                    </Option>\r\n                  );\r\n                })}\r\n            </OptionsContainer>\r\n          </QuestionCard>\r\n        </QuizCard>\r\n      )}\r\n      {questions && <ResetButton onClick={handleReset}>Reset</ResetButton>}\r\n    </QuizWrapper>\r\n  );\r\n};\r\n\r\nexport default Quiz;\r\n","import styled from \"styled-components\";\r\n\r\nexport const ScoreWrapper = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  min-height: 100vh;\r\n  justify-content: center;\r\n  align-items: center;\r\n  gap: 2rem;\r\n  text-align: center;\r\n\r\n  h1 {\r\n    color: #232323;\r\n    font-size: 5rem;\r\n  }\r\n\r\n  button {\r\n    display: flex;\r\n    border-radius: 0.25rem;\r\n    background-color: #232323;\r\n    color: #fff;\r\n    padding: 1rem 2rem;\r\n    border: none;\r\n    outline: none;\r\n    font-size: 3rem;\r\n    font-weight: bold;\r\n    transition: opacity 0.25s ease-in;\r\n\r\n    &:hover {\r\n      opacity: 0.9;\r\n      cursor: pointer;\r\n    }\r\n  }\r\n`;\r\n","import React from \"react\";\r\nimport { useNavigate } from \"react-router\";\r\nimport { ScoreWrapper } from \"./Score.style\";\r\n\r\nconst Score = ({ score, setScore, setQuestions }) => {\r\n  const navigate = useNavigate();\r\n\r\n  const handleReset = () => {\r\n    setScore(0);\r\n    setQuestions();\r\n    navigate(\"/\");\r\n  };\r\n\r\n  return (\r\n    <ScoreWrapper>\r\n      <h1>\r\n        Final Score :{\" \"}\r\n        <span style={score > 5 ? { color: \"#23C552\" } : { color: \"#F84F31\" }}>\r\n          {score}\r\n        </span>\r\n      </h1>\r\n      <button onClick={handleReset}>Home</button>\r\n    </ScoreWrapper>\r\n  );\r\n};\r\n\r\nexport default Score;\r\n","import { useState } from \"react\";\nimport { BrowserRouter, Route, Routes } from \"react-router-dom\";\nimport axios from \"axios\";\nimport GlobalStyle from \"./GlobalStyles\";\nimport { Container } from \"./Components/Container/Container.styles\";\nimport Home from \"./Pages/Home\";\nimport Quiz from \"./Pages/Quiz\";\nimport Score from \"./Pages/Score\";\n\nconst App = () => {\n  const [questions, setQuestions] = useState();\n  const [score, setScore] = useState(0);\n  const [error, setError] = useState();\n\n  const fetchQuestions = async (category, difficulty) => {\n    const URL = `https://opentdb.com/api.php?amount=10&category=${category}&difficulty=${difficulty}&type=multiple`;\n\n    const { data } = await axios.get(URL);\n\n    setQuestions(data.results);\n  };\n\n  return (\n    <BrowserRouter basename=\"/react-opentdb-quiz-app\">\n      <GlobalStyle />\n      <Container>\n        <Routes>\n          <Route\n            path=\"/\"\n            element={\n              <Home\n                fetchQuestions={fetchQuestions}\n                error={error}\n                setError={setError}\n              />\n            }\n          />\n          <Route\n            path=\"/quiz\"\n            element={\n              <Quiz\n                questions={questions}\n                setQuestions={setQuestions}\n                score={score}\n                setScore={setScore}\n                error={error}\n                setError={setError}\n              />\n            }\n          />\n          <Route\n            path=\"/score\"\n            element={\n              <Score\n                score={score}\n                setScore={setScore}\n                setQuestions={setQuestions}\n              />\n            }\n          />\n        </Routes>\n      </Container>\n    </BrowserRouter>\n  );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nconst ROOT = document.getElementById(\"root\");\n\nReactDOM.render(<App />, ROOT);\n"],"sourceRoot":""}